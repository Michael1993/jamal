{@define output=_output}
{@comment
START SNIPPET started{output}
{@define fruit(color,actualSize,name)=we have an color name of size actualSize}
{fruit/red/apple/20ounce}
{fruit/green/melone/1kg}
END SNIPPET

START SNIPPET comment{output}
this is some {@comment this text
will not appear in the output}text
END SNIPPET

START SNIPPET define{output}
{@define parameterless=this is a simple macro} macro defined
{parameterless}
{@define withparams(a,b,%66h)=this is a b %66h} macro defined
{withparams/A/more complex/macro}
{withparams/%66h/%66h/zazu} <- %66h is not replaced to zazu in the parameters
{@define? withparams(a,b,c)=abc}here 'withparams' is not redefined
{withparams|a|b|c}
{#comment {@define x=local}{@define :x=global} {#define :y=here we are {x}}}
{y}
here we are {x}
END SNIPPET

START SNIPPET eval{output}
{@eval/JavaScript 1+3}
{@define a=1}{@define b=2}
{#eval {a}+{b}}
END SNIPPET

START SNIPPET script{output}
{@script for(loopvar,start,end,content)=
    c = ""
    for( i = start ; i <= end ; i++ ){
      c = c + content.replace(new RegExp( loopvar , 'g'), i)
    }
    c
}
{for%xxx%1%3%xxx. iterated
}
END SNIPPET

}

START SNIPPET sep{output}
{@sep/[[/]]}
[[@define apple=fruit]]
[[apple]]
[[#comment {@sep/<</>>}
<<@define z=zazi>><<@export z>>
<<#sep>>
[[#define a1=[[?z]]]]
[[@define a2=[[z]]]]
]]
{z}{a1}{a2}
END SNIPPET
